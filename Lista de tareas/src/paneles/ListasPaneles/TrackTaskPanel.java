/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package paneles.ListasPaneles;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.Timer;
import list.task.TrackTask;
import static paneles.PantallaInicial.app;
import userLists.UserLists;


/**
 *
 * @author sofia
 */
public class TrackTaskPanel extends javax.swing.JPanel {

    private UserLists userLists;
    private String category;
    private boolean play;
    private int sec;
    private int min;
    private int hour;
    private Timer timer;

    
    /**
     * Creates new form TrackTaskPanel
     */
    public TrackTaskPanel(UserLists userLists, String category) {
        sec = 0;
        min = 0;
        hour = 0;
        play = false;
        this.userLists = userLists;
        this.category = category;
        initComponents();
         confirmDeletePanel.setVisible(false);
        text_timer.setText("00:00:00");
        updateTrackList();
        text_titleList.setText(category.toUpperCase());
        timer = new Timer(10, timeAction);
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        confirmDeletePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        text_timer = new javax.swing.JLabel();
        buttonPlay = new javax.swing.JButton();
        buttonStop = new javax.swing.JButton();
        text_error = new javax.swing.JLabel();
        text_titleList = new javax.swing.JLabel();
        infoNewList = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelTaskViewer = new javax.swing.JPanel();
        text_newTask = new javax.swing.JTextField();
        backGroundText = new javax.swing.JLabel();
        titleTaskList = new javax.swing.JLabel();
        panel = new javax.swing.JPanel();
        backgroundTaskList = new javax.swing.JLabel();
        buttonDeleteList = new javax.swing.JButton();
        buttonGoBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(195, 225, 203));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        confirmDeletePanel.setOpaque(false);
        confirmDeletePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(195, 225, 203));
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 223, 138));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("SE BORRARAN PERMANETEMENTE LOS DATOS");
        confirmDeletePanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 310, 30));

        jButton1.setForeground(new java.awt.Color(202, 74, 23));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/BotonEliminar.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setPreferredSize(new java.awt.Dimension(150, 30));
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/BotonEliminarMO.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        confirmDeletePanel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, -1, -1));

        jButton2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(202, 74, 23));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/fondoBotonCerrar.png"))); // NOI18N
        jButton2.setToolTipText("");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setPreferredSize(new java.awt.Dimension(20, 20));
        jButton2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/fondoBotonCerrarMO.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        confirmDeletePanel.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 20, 20));

        jLabel3.setBackground(new java.awt.Color(195, 225, 203));
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 223, 138));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Â¿ESTA SEGURO QUE DESEA ELIMINAR LA LISTA?");
        confirmDeletePanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 310, 30));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/fondoEliminarLista.png"))); // NOI18N
        confirmDeletePanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        add(confirmDeletePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, -1, -1));

        text_timer.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        text_timer.setForeground(new java.awt.Color(195, 225, 203));
        text_timer.setText("00:00:00");
        add(text_timer, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, -1, 30));

        buttonPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/botonPlayInactivo.png"))); // NOI18N
        buttonPlay.setBorderPainted(false);
        buttonPlay.setContentAreaFilled(false);
        buttonPlay.setMaximumSize(new java.awt.Dimension(30, 30));
        buttonPlay.setMinimumSize(new java.awt.Dimension(30, 30));
        buttonPlay.setPreferredSize(new java.awt.Dimension(30, 30));
        buttonPlay.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/botonPlayActivo.png"))); // NOI18N
        buttonPlay.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/botonPlayInactivoRollOver.png"))); // NOI18N
        buttonPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPlayActionPerformed(evt);
            }
        });
        add(buttonPlay, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, -1, -1));

        buttonStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/botonStopActivo.png"))); // NOI18N
        buttonStop.setBorderPainted(false);
        buttonStop.setContentAreaFilled(false);
        buttonStop.setMaximumSize(new java.awt.Dimension(30, 30));
        buttonStop.setMinimumSize(new java.awt.Dimension(30, 30));
        buttonStop.setPreferredSize(new java.awt.Dimension(30, 30));
        buttonStop.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/botonStopInactivo.png"))); // NOI18N
        buttonStop.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/botonStopActivoRollOver.png"))); // NOI18N
        buttonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStopActionPerformed(evt);
            }
        });
        add(buttonStop, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 100, -1, -1));

        text_error.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        text_error.setForeground(new java.awt.Color(204, 0, 0));
        text_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(text_error, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, 350, 20));

        text_titleList.setBackground(new java.awt.Color(195, 225, 203));
        text_titleList.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        text_titleList.setForeground(new java.awt.Color(195, 225, 203));
        text_titleList.setText("PROGRA");
        add(text_titleList, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 21, -1, 30));

        infoNewList.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        infoNewList.setForeground(new java.awt.Color(195, 225, 203));
        infoNewList.setText("Crear nueva tarea");
        add(infoNewList, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, 30));

        jScrollPane1.setBackground(new java.awt.Color(0, 128, 97));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(0, 128, 97));
        jScrollPane1.setOpaque(false);

        panelTaskViewer.setBackground(new java.awt.Color(0, 128, 97));
        panelTaskViewer.setLayout(new java.awt.GridLayout(0, 1));
        jScrollPane1.setViewportView(panelTaskViewer);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 600, 200));

        text_newTask.setBackground(new java.awt.Color(195, 225, 203));
        text_newTask.setForeground(new java.awt.Color(102, 102, 102));
        text_newTask.setBorder(null);
        text_newTask.setPreferredSize(new java.awt.Dimension(100, 30));
        text_newTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_newTaskActionPerformed(evt);
            }
        });
        text_newTask.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                text_newTaskKeyTyped(evt);
            }
        });
        add(text_newTask, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 350, -1));

        backGroundText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/barraTextoTrakingList.png"))); // NOI18N
        add(backGroundText, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, -1, -1));

        titleTaskList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/titulosListaTraqueoParticular.png"))); // NOI18N
        add(titleTaskList, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        panel.setBackground(new java.awt.Color(0, 128, 97));
        panel.setLayout(new java.awt.GridLayout(0, 1));
        add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        backgroundTaskList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/fondoListas.png"))); // NOI18N
        add(backgroundTaskList, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        buttonDeleteList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/botonDelete.png"))); // NOI18N
        buttonDeleteList.setBorderPainted(false);
        buttonDeleteList.setContentAreaFilled(false);
        buttonDeleteList.setMaximumSize(new java.awt.Dimension(37, 37));
        buttonDeleteList.setMinimumSize(new java.awt.Dimension(37, 37));
        buttonDeleteList.setPreferredSize(new java.awt.Dimension(37, 37));
        buttonDeleteList.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/botonDeleteMouseOver.png"))); // NOI18N
        buttonDeleteList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteListActionPerformed(evt);
            }
        });
        add(buttonDeleteList, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 410, -1, -1));

        buttonGoBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/botonVolver.png"))); // NOI18N
        buttonGoBack.setBorderPainted(false);
        buttonGoBack.setContentAreaFilled(false);
        buttonGoBack.setMaximumSize(new java.awt.Dimension(37, 37));
        buttonGoBack.setMinimumSize(new java.awt.Dimension(37, 37));
        buttonGoBack.setPreferredSize(new java.awt.Dimension(37, 37));
        buttonGoBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/botonVolverMouseOver.png"))); // NOI18N
        buttonGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGoBackActionPerformed(evt);
            }
        });
        add(buttonGoBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private ActionListener timeAction = new ActionListener()
    {
        @Override
        public void actionPerformed(ActionEvent e) {
            sec++;
            
            if(sec == 60)
            {
                sec = 0;
                min++;
            }
            
            if(min == 60)
            {
                min = 0;
                hour++;
            }
            
            if(hour == 24)
            {
                hour = 0;
            }
            
            updateTimer();
        }      
    };
    
    private void updateTimer()
    {
        String text = (hour<=9?"0":"")+hour+":"+(min<=9?"0":"")+min+":"+(sec<=9?"0":"")+sec;
        text_timer.setText(text);
    }
    
    private void buttonDeleteListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteListActionPerformed
        confirmDeletePanel.setVisible(true);
        text_newTask.setVisible(false);
    }//GEN-LAST:event_buttonDeleteListActionPerformed

    private void buttonPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPlayActionPerformed
        text_error.setText("");//reinicio el texto de s
        
        if(text_newTask.getText().isEmpty())
        {
            text_error.setText("Ingrese un nombre antes de empezar");
        }
        else if(!play)
        {
            //cambio las imagenes del boton Play
            buttonPlay.setIcon(new ImageIcon(getClass().getResource("/imagenes/listas/botonPlayActivo.png")));
            buttonPlay.setRolloverIcon(new ImageIcon(getClass().getResource("/imagenes/listas/botonPlayActivoRollOver.png")));
            buttonPlay.setPressedIcon(new ImageIcon(getClass().getResource("/imagenes/listas/botonPlayInactivo.png")));
            
            //cambio las imagenes del boton Stop
            buttonStop.setIcon(new ImageIcon(getClass().getResource("/imagenes/listas/botonStopInactivo.png")));
            buttonStop.setRolloverIcon(new ImageIcon(getClass().getResource("/imagenes/listas/botonStopInactivoRollOver.png")));
            buttonStop.setPressedIcon(new ImageIcon(getClass().getResource("/imagenes/listas/botonStopActivo.png")));
                        
            //si no esta reproduciendo nada
            play = true;
            
            timer.start();
            
        }
        
    }//GEN-LAST:event_buttonPlayActionPerformed

    private void buttonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStopActionPerformed
        // TODO add your handling code here:
        if(play)
        {
            //cambio las imagenes del boton Plat
            buttonPlay.setIcon(new ImageIcon(getClass().getResource("/imagenes/listas/botonPlayInactivo.png")));
            buttonPlay.setRolloverIcon(new ImageIcon(getClass().getResource("/imagenes/listas/botonPlayInactivoRollOver.png")));
            buttonPlay.setPressedIcon(new ImageIcon(getClass().getResource("/imagenes/listas/botonPlayActivo.png")));
            
            //cambio las imagenes del boton Stop
            buttonStop.setIcon(new ImageIcon(getClass().getResource("/imagenes/listas/botonStopActivo.png")));
            buttonStop.setRolloverIcon(new ImageIcon(getClass().getResource("/imagenes/listas/botonStopActivoRollOver.png")));
            buttonStop.setPressedIcon(new ImageIcon(getClass().getResource("/imagenes/listas/botonStopInactivo.png")));
            
            //solo se puede pausar si esta en play
            play = false;
     
            
            //ahora que tengo el tiempo creo un Duration con el tiempo
            timer.stop();
            
            TrackTask task = new TrackTask(text_newTask.getText(),text_timer.getText());
            //se agrego a la lista
            userLists.getTrackLists().getTrackList(category).addTask(task); 
            userLists.saveTrackInFile();//guardo el task en la lista       
            
            updateTrackList();
            text_newTask.setText("");
            
            sec = 0;
            min = 0;
            hour = 0;
            updateTimer();//actualizo el timer
            
        }
    }//GEN-LAST:event_buttonStopActionPerformed

    private void buttonGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGoBackActionPerformed
        //vuelve a la pantalla principal
        if(!play)
        {
            app.seeMenu(false);
            app.replaceScreen(app.homescreenApp);
        }
    }//GEN-LAST:event_buttonGoBackActionPerformed

    private void text_newTaskKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_newTaskKeyTyped
        char validate = evt.getKeyChar();
        char delete = 127;
        
        if(validate != delete)
        {
            // limitar la cantidad de letras que se ingresan
            if(text_newTask.getText().length() == 40 )
            {
                //borro la ultima letra ingresara
                evt.consume();
            }
        }
    }//GEN-LAST:event_text_newTaskKeyTyped

    private void text_newTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_newTaskActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_newTaskActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(!play)
        {
            userLists.deleteTrackList(category);//elimino la lista

            //vuelvo a la pantalla principal
            app.replaceScreen(app.homescreenApp);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        confirmDeletePanel.setVisible(false);
        text_newTask.setVisible(true);
        text_error.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    //agrego las listas guardadas en el archivo en la lista de botones
    public void updateTrackList()
    {
        JButton text;
        try
        {
            userLists.readTrackFromFile();
        }
        catch(IOException ex)
        {}
        
        String listas = userLists.getTrackLists().getTrackList(category).showTasks();
        panelTaskViewer.removeAll();
        if(!listas.isEmpty())
        {
            //las divido en un array
            String[] parts = listas.split("_");
        
            for(String aux : parts)
            {    
                text = new JButton();//creo un label y le envio la info de la lista
                text.setIcon(new ImageIcon(getClass().getResource("/imagenes/listas/fondoTaskTrack.png")));
                text.setHorizontalTextPosition(JLabel.CENTER);
                text.setBorderPainted(false);
                text.setContentAreaFilled(false);
                
                text.setText(aux);
                text.setForeground(new Color(195,225,203));
                panelTaskViewer.add(text);//acgrego el boton al panel
            }
            
        }
        
        panel.updateUI();//actualizar ver botones
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backGroundText;
    private javax.swing.JLabel backgroundTaskList;
    private javax.swing.JButton buttonDeleteList;
    private javax.swing.JButton buttonGoBack;
    private javax.swing.JButton buttonPlay;
    private javax.swing.JButton buttonStop;
    private javax.swing.JPanel confirmDeletePanel;
    private javax.swing.JLabel infoNewList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panelTaskViewer;
    private javax.swing.JLabel text_error;
    private javax.swing.JTextField text_newTask;
    private javax.swing.JLabel text_timer;
    private javax.swing.JLabel text_titleList;
    private javax.swing.JLabel titleTaskList;
    // End of variables declaration//GEN-END:variables
}
