/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package paneles.ListasPaneles;

import java.io.IOException;
import java.time.Duration;
import javax.swing.JButton;
import javax.swing.JLabel;
import static paneles.PantallaInicial.app;
import userLists.UserLists;
import userLists.exceptions.UnfinishedTasksException;

/**
 *
 * @author sofia
 */
public class TrackTaskPanel extends javax.swing.JPanel {

    private UserLists userLists;
    private String category;
    /**
     * Creates new form TrackTaskPanel
     */
    public TrackTaskPanel(UserLists userLists, String category) {
        this.userLists = userLists;
        this.category = category;
        initComponents();
        updateButtons();
        text_titleList.setText(category.toUpperCase());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        text_error = new javax.swing.JLabel();
        text_titleList = new javax.swing.JLabel();
        infoNewList = new javax.swing.JLabel();
        text_newTask = new javax.swing.JTextField();
        backGroundText = new javax.swing.JLabel();
        titleTaskList = new javax.swing.JLabel();
        panel = new javax.swing.JPanel();
        backgroundTaskList = new javax.swing.JLabel();
        buttonDeleteList = new javax.swing.JButton();

        setBackground(new java.awt.Color(195, 225, 203));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        text_error.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        text_error.setForeground(new java.awt.Color(255, 153, 153));
        text_error.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        add(text_error, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 350, 20));

        text_titleList.setBackground(new java.awt.Color(195, 225, 203));
        text_titleList.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        text_titleList.setForeground(new java.awt.Color(195, 225, 203));
        text_titleList.setText("PROGRA");
        add(text_titleList, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 21, -1, 30));

        infoNewList.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        infoNewList.setForeground(new java.awt.Color(195, 225, 203));
        infoNewList.setText("Crear nueva tarea");
        add(infoNewList, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, 30));

        text_newTask.setBackground(new java.awt.Color(195, 225, 203));
        text_newTask.setForeground(new java.awt.Color(102, 102, 102));
        text_newTask.setBorder(null);
        text_newTask.setPreferredSize(new java.awt.Dimension(100, 30));
        add(text_newTask, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 440, -1));

        backGroundText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/espacioTextoList.png"))); // NOI18N
        add(backGroundText, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, -1, -1));

        titleTaskList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/titulosListaSimpleParticular.png"))); // NOI18N
        add(titleTaskList, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        panel.setBackground(new java.awt.Color(0, 128, 97));
        panel.setLayout(new java.awt.GridLayout(0, 1));
        add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        backgroundTaskList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/fondoListas.png"))); // NOI18N
        add(backgroundTaskList, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        buttonDeleteList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/botonDelete.png"))); // NOI18N
        buttonDeleteList.setBorderPainted(false);
        buttonDeleteList.setContentAreaFilled(false);
        buttonDeleteList.setMaximumSize(new java.awt.Dimension(37, 37));
        buttonDeleteList.setMinimumSize(new java.awt.Dimension(37, 37));
        buttonDeleteList.setPreferredSize(new java.awt.Dimension(37, 37));
        buttonDeleteList.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/botonDeleteMouseOver.png"))); // NOI18N
        buttonDeleteList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteListActionPerformed(evt);
            }
        });
        add(buttonDeleteList, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 410, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void buttonDeleteListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteListActionPerformed
        // TODO add your handling code here:
        try
        {
            userLists.deleteSimpleList(category);//elimino la lista

            //vuelvo a la pantalla principal
            app.replaceScreen(app.homescreenApp);
        }
        catch(UnfinishedTasksException ex)
        {
            text_error.setText("No se puede eliminar un lista con tareas pendientes");
        }
    }//GEN-LAST:event_buttonDeleteListActionPerformed

    //agrego las listas guardadas en el archivo en la lista de botones
    public void updateButtons()
    {
        JLabel text;
        try
        {
            userLists.readTrackFromFile();
        }
        catch(IOException ex)
        {}
        
        String listas = userLists.getTrackLists().getTrackList(category).showTasks();
        panel.removeAll();
        if(!listas.isEmpty())
        {
            //las divido en un array
            String[] parts = listas.split("_");
        
            for(String aux : parts)
            {
                String info = aux;
                Duration duration = userLists.getTrackLists().getTrackList(category).searchTask(aux).getDuration();
    
                text = new JLabel();//creo un label y le envio la info de la lista
                
                info+=("     time: "+duration.toString());
                
                text.setText(info);
                panel.add(text);//acgrego el boton al panel
            }
            
        }
        
        panel.updateUI();//actualizar ver botones
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backGroundText;
    private javax.swing.JLabel backgroundTaskList;
    private javax.swing.JButton buttonDeleteList;
    private javax.swing.JLabel infoNewList;
    private javax.swing.JPanel panel;
    private javax.swing.JLabel text_error;
    private javax.swing.JTextField text_newTask;
    private javax.swing.JLabel text_titleList;
    private javax.swing.JLabel titleTaskList;
    // End of variables declaration//GEN-END:variables
}
