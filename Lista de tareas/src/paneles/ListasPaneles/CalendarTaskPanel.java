/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package paneles.ListasPaneles;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import list.exceptions.ElementAlreadyExistException;
import list.task.DateTask;
import list.task.Fecha;
import static list.task.Fecha.validDate;
import list.task.exceptions.DatePastException;
import static paneles.PantallaInicial.app;
import userLists.UserLists;
import userLists.exceptions.UnfinishedTasksException;

/**
 *
 * @author sofia
 */
public class CalendarTaskPanel extends javax.swing.JPanel {

    private UserLists userLists;
    private String category;
    /**
     * Creates new form CalendarTaskPanel
     */
    public CalendarTaskPanel(UserLists userLists, String category) {
        
        this.userLists = userLists;
        this.category = category;
        initComponents();
        updateButtons();
        confirmDeletePanel.setVisible(false);
        text_titleList.setText(category.toUpperCase());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        confirmDeletePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        buttonDeleteList = new javax.swing.JButton();
        text_titleList = new javax.swing.JLabel();
        titleTaskList = new javax.swing.JLabel();
        text_error = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        text_day = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        text_month = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        text_year = new javax.swing.JTextField();
        text_newTask = new javax.swing.JTextField();
        infoNewList = new javax.swing.JLabel();
        buttonCreate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        panel = new javax.swing.JPanel();
        backGroundText = new javax.swing.JLabel();
        backgroundTaskList = new javax.swing.JLabel();
        buttonGoBack1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(195, 225, 203));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        confirmDeletePanel.setOpaque(false);
        confirmDeletePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(195, 225, 203));
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 223, 138));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("SE BORRARAN PERMANETEMENTE LOS DATOS");
        confirmDeletePanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 310, 30));

        jButton1.setForeground(new java.awt.Color(202, 74, 23));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/BotonEliminar.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setPreferredSize(new java.awt.Dimension(150, 30));
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/BotonEliminarMO.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        confirmDeletePanel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, -1, -1));

        jButton2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(202, 74, 23));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/fondoBotonCerrar.png"))); // NOI18N
        jButton2.setToolTipText("");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setPreferredSize(new java.awt.Dimension(20, 20));
        jButton2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/fondoBotonCerrarMO.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        confirmDeletePanel.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 20, 20));

        jLabel3.setBackground(new java.awt.Color(195, 225, 203));
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 223, 138));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Â¿ESTA SEGURO QUE DESEA ELIMINAR LA LISTA?");
        confirmDeletePanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 310, 30));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/fondoEliminarLista.png"))); // NOI18N
        confirmDeletePanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        add(confirmDeletePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, -1, -1));

        buttonDeleteList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/botonDelete.png"))); // NOI18N
        buttonDeleteList.setBorderPainted(false);
        buttonDeleteList.setContentAreaFilled(false);
        buttonDeleteList.setMaximumSize(new java.awt.Dimension(37, 37));
        buttonDeleteList.setMinimumSize(new java.awt.Dimension(37, 37));
        buttonDeleteList.setPreferredSize(new java.awt.Dimension(37, 37));
        buttonDeleteList.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/botonDeleteMouseOver.png"))); // NOI18N
        buttonDeleteList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteListActionPerformed(evt);
            }
        });
        add(buttonDeleteList, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 410, -1, -1));

        text_titleList.setBackground(new java.awt.Color(195, 225, 203));
        text_titleList.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        text_titleList.setForeground(new java.awt.Color(195, 225, 203));
        text_titleList.setText("PROGRA");
        add(text_titleList, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 21, -1, 30));

        titleTaskList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/titulosListaFechaParticular.png"))); // NOI18N
        add(titleTaskList, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        text_error.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        text_error.setForeground(new java.awt.Color(204, 0, 0));
        text_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(text_error, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 420, 350, 20));

        jLabel1.setBackground(new java.awt.Color(195, 225, 203));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(195, 225, 203));
        jLabel1.setText("Dia");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, -1, 30));

        text_day.setBackground(new java.awt.Color(195, 225, 203));
        text_day.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        text_day.setForeground(new java.awt.Color(102, 102, 102));
        text_day.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_day.setBorder(null);
        text_day.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                text_dayKeyTyped(evt);
            }
        });
        add(text_day, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, 30, 30));

        jLabel4.setBackground(new java.awt.Color(195, 225, 203));
        jLabel4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(195, 225, 203));
        jLabel4.setText("Mes");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, -1, 30));

        text_month.setBackground(new java.awt.Color(195, 225, 203));
        text_month.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        text_month.setForeground(new java.awt.Color(102, 102, 102));
        text_month.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_month.setBorder(null);
        text_month.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                text_monthKeyTyped(evt);
            }
        });
        add(text_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 30, 30));

        jLabel5.setBackground(new java.awt.Color(195, 225, 203));
        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(195, 225, 203));
        jLabel5.setText("AÃ±o");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 140, -1, 30));

        text_year.setBackground(new java.awt.Color(195, 225, 203));
        text_year.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        text_year.setForeground(new java.awt.Color(102, 102, 102));
        text_year.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_year.setBorder(null);
        text_year.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                text_yearKeyTyped(evt);
            }
        });
        add(text_year, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, 40, 30));

        text_newTask.setBackground(new java.awt.Color(195, 225, 203));
        text_newTask.setForeground(new java.awt.Color(102, 102, 102));
        text_newTask.setBorder(null);
        text_newTask.setPreferredSize(new java.awt.Dimension(100, 30));
        text_newTask.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                text_newTaskKeyTyped(evt);
            }
        });
        add(text_newTask, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 440, -1));

        infoNewList.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        infoNewList.setForeground(new java.awt.Color(195, 225, 203));
        infoNewList.setText("Crear nueva tarea");
        add(infoNewList, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, 30));

        buttonCreate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/botonCrear.png"))); // NOI18N
        buttonCreate.setBorderPainted(false);
        buttonCreate.setContentAreaFilled(false);
        buttonCreate.setMaximumSize(new java.awt.Dimension(94, 30));
        buttonCreate.setMinimumSize(new java.awt.Dimension(94, 30));
        buttonCreate.setPreferredSize(new java.awt.Dimension(94, 30));
        buttonCreate.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/botonCrearMouseOver.png"))); // NOI18N
        buttonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCreateActionPerformed(evt);
            }
        });
        add(buttonCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 140, -1, -1));

        jScrollPane1.setBackground(new java.awt.Color(0, 128, 97));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(0, 128, 97));
        jScrollPane1.setOpaque(false);

        panel.setBackground(new java.awt.Color(0, 128, 97));
        panel.setLayout(new java.awt.GridLayout(0, 1));
        jScrollPane1.setViewportView(panel);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 600, 200));

        backGroundText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/espacioTextoList.png"))); // NOI18N
        add(backGroundText, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, -1, -1));

        backgroundTaskList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/listas/fondoListas.png"))); // NOI18N
        add(backgroundTaskList, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        buttonGoBack1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/botonVolver.png"))); // NOI18N
        buttonGoBack1.setBorderPainted(false);
        buttonGoBack1.setContentAreaFilled(false);
        buttonGoBack1.setMaximumSize(new java.awt.Dimension(37, 37));
        buttonGoBack1.setMinimumSize(new java.awt.Dimension(37, 37));
        buttonGoBack1.setPreferredSize(new java.awt.Dimension(37, 37));
        buttonGoBack1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/botonVolverMouseOver.png"))); // NOI18N
        buttonGoBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGoBack1ActionPerformed(evt);
            }
        });
        add(buttonGoBack1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    //agrego las listas guardadas en el archivo en la lista de botones
    /**
     * updateButtons
     */
    public void updateButtons()
    {
        JButton button = null;
        try
        {
            userLists.readDateFromFile();
        }
        catch(IOException ex)
        {
            System.out.println("no lee el archivo");
        }
        
        panel.removeAll();
        
        String listas = userLists.getDateLists().getDateList(category).showUncheckTasks();
        String listasUnchecked = userLists.getDateLists().getDateList(category).showCheckTasks();
        
        addButtonToPanel(listas,button);
        addButtonToPanel(listasUnchecked,button);
        
        panel.updateUI();//actualizar ver botones
    }
    
    /**
     * addButtonToPanel
     * @param listas
     * @param button 
     */
    private void addButtonToPanel(String listas, JButton button)
    {
        if(!listas.isEmpty())
        {
            //las divido en un array
            String[] parts = listas.split("/");
        
            for(String aux : parts)
            {
                button = createButton(aux);//creo un boton y le envio la info de la lista
                panel.add(button);//acgrego el boton al panel
            }
            
        }
    }
    
    /**
     * createButton
     * @param info
     * @return 
     */
    private JButton createButton(String info)
    {
        //crear boton
        JButton button = new JButton(""+info);
        
         //visual del boton
        button.setBackground(new Color(0,82,77));
        button.setForeground(new Color(195,225,203));
        button.setSize(500,35);
        button.setBorderPainted(false);
        button.setContentAreaFilled(false);
        
        String[] parts = info.split(" ........ ");
        String nameTask = parts[1];
        
        //la imagen depende de si esta checkeado o no
        DateTask task = userLists.getDateLists().getDateList(category).searchTask(nameTask);
        
        
        if(task.getCheck())
        {
            //imagen ckequeada
            button.setIcon(new ImageIcon(getClass().getResource("/imagenes/listas/taskSimpleChecked.png")));
            button.setRolloverIcon(new ImageIcon(getClass().getResource("/imagenes/listas/taskSimpleMouseOver.png")));
        }
        else
        {
            //imagen sin chequear
            //ver si vencio
            String[] fecha = parts[0].split("-");
            
            try {
                Fecha.validDate(Integer.parseInt(fecha[0]),
                        Integer.parseInt(fecha[1]),
                        Integer.parseInt(fecha[2]));
                
                button.setIcon(new ImageIcon(getClass().getResource("/imagenes/listas/taskSimpleUnchecked.png")));
                button.setRolloverIcon(new ImageIcon(getClass().getResource("/imagenes/listas/taskSimpleMouseOver.png")));
            } 
            catch (DatePastException ex) 
            {
                button.setIcon(new ImageIcon(getClass().getResource("/imagenes/listas/datePassboton.png")));
                button.setRolloverIcon(new ImageIcon(getClass().getResource("/imagenes/listas/datePassbotonMO.png")));
            } 
            catch (DateTimeParseException ex) 
            {
                
            }
                 
        }
  
        button.setHorizontalTextPosition(JLabel.CENTER);
        
        button.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            { 
                //elimino la tarea de la lista
                
                //las divido en un array
                
                userLists.getDateLists().getDateList(category).checkTask(nameTask);
                
                userLists.saveDateInFile();
                
                //actualizo el panel
                updateButtons();
            }
        }
        );
        
        return button;
    }
    
    
    /**
     * text_dayKeyTyped
     * @param evt 
     */
    private void text_dayKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_dayKeyTyped
        //valida que la tecla ingresada por teclado sea solo numero
        char validate = evt.getKeyChar();

        if(Character.isLetter(validate)||text_day.getText().length() == 2)
        {
            //borro la ultima letra ingresara
            evt.consume();
        }
    }//GEN-LAST:event_text_dayKeyTyped

    /**
     * text_monthKeyTyped
     * @param evt 
     */
    private void text_monthKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_monthKeyTyped
        //valida que la tecla ingresada por teclado sea solo numero
        char validate = evt.getKeyChar();

        if(Character.isLetter(validate)||text_month.getText().length() == 2)
        {
            //borro la ultima letra ingresara
            evt.consume();
        }
    }//GEN-LAST:event_text_monthKeyTyped

    /**
     * text_yearKeyTyped
     * @param evt 
     */
    private void text_yearKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_yearKeyTyped
        //valida que la tecla ingresada por teclado sea solo numero
        char validate = evt.getKeyChar();

        if(Character.isLetter(validate)||text_year.getText().length() == 4)
        {
            //borro la ultima letra ingresara
            evt.consume();
        }
    }//GEN-LAST:event_text_yearKeyTyped

    /**
     * buttonCreateActionPerformed
     * @param evt 
     */
    private void buttonCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCreateActionPerformed

        
        text_error.setText("");//reinicio los mensajes de error
        if(text_newTask.getText().isEmpty())
        {
            text_error.setText("No se puede agregar una tarea vacia");
        }
        else if((text_day.getText().isEmpty())||(text_month.getText().isEmpty())||
                (text_year.getText().isEmpty()))
        {
            text_error.setText("Completar la fecha a finalizar");
        }
        else
        {
            //verificar fecha
            boolean validateDate = true;
            int day = Integer.parseInt(text_day.getText());
            int month = Integer.parseInt(text_month.getText());
            int year = Integer.parseInt(text_year.getText());
            
            try
            {
                LocalDate.of(year, month, day);
            }
            catch(DateTimeException e) 
            {
                text_error.setText("Fecha invalida");
                validateDate = false;
            }
            
            if(validateDate)
            {
                try
                {
                    //trato de agregar una nueva lista              
                    Fecha date = new Fecha(day,month,year);
               
                    validDate(day,month,year);
  
                    DateTask task = new DateTask(text_newTask.getText().toUpperCase(),date);                   
                
                    userLists.getDateLists().getDateList(category).addTask(task);

                    userLists.saveDateInFile();
                    //actualizo los botones
                    updateButtons();
                }
                catch(ElementAlreadyExistException ex)
                {
                    //si existe tiro un mensaje
                    text_error.setText("La tarea "+text_newTask.getText()+" ya existe");
                } catch (DateTimeParseException ex) {
                    Logger.getLogger(CalendarTaskPanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (DatePastException ex) {
                    text_error.setText("Fecha invalida");
                }
            }
                
        }

        text_newTask.setText("");//reseteo el campo de texto
        text_day.setText("");
        text_month.setText("");
        text_year.setText("");

    }//GEN-LAST:event_buttonCreateActionPerformed

    /**
     * buttonGoBack1ActionPerformed
     * @param evt 
     */
    private void buttonGoBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGoBack1ActionPerformed
        //vuelve a la pantalla principal
        app.replaceScreen(app.homescreenApp);
    }//GEN-LAST:event_buttonGoBack1ActionPerformed

    /**
     * buttonDeleteListActionPerformed
     * @param evt 
     */
    private void buttonDeleteListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteListActionPerformed
        confirmDeletePanel.setVisible(true);
        text_newTask.setVisible(false);
    }//GEN-LAST:event_buttonDeleteListActionPerformed

    /**
     * jButton1ActionPerformed
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try
        {
            userLists.deleteDateList(category);//elimino la lista

            //vuelvo a la pantalla principal
            app.replaceScreen(app.homescreenApp);
        }
        catch(UnfinishedTasksException ex)
        {
            text_error.setText("No se puede eliminar un lista con tareas pendientes");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * jButton2ActionPerformed
     * @param evt 
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        confirmDeletePanel.setVisible(false);
        text_newTask.setVisible(true);
        text_error.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * text_newTaskKeyTyped
     * @param evt 
     */
    private void text_newTaskKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_newTaskKeyTyped
        char validate = evt.getKeyChar();
        char delete = 127;
        
        if(validate != delete)
        {
            // limitar la cantidad de letras que se ingresan
            if((text_newTask.getText().length() == 40) || (validate == '.'))
            {
                //borro la ultima letra ingresara
                evt.consume();
            }
        }
    }//GEN-LAST:event_text_newTaskKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backGroundText;
    private javax.swing.JLabel backgroundTaskList;
    private javax.swing.JButton buttonCreate;
    private javax.swing.JButton buttonDeleteList;
    private javax.swing.JButton buttonGoBack1;
    private javax.swing.JPanel confirmDeletePanel;
    private javax.swing.JLabel infoNewList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField text_day;
    private javax.swing.JLabel text_error;
    private javax.swing.JTextField text_month;
    private javax.swing.JTextField text_newTask;
    private javax.swing.JLabel text_titleList;
    private javax.swing.JTextField text_year;
    private javax.swing.JLabel titleTaskList;
    // End of variables declaration//GEN-END:variables

   
}
